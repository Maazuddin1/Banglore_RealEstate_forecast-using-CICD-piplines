# This workflow will install Python dependencies, run tests, lint, and check app.py and setup.py functionality
name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-22.04  # or ubuntu-20.04
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pytest-flask
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Test with pytest
      run: |
        python -m pytest tests/ -v
    
    - name: Check Flask app functionality
      run: |
        # Test if Flask app imports correctly
        python -c "from app import app"
        # Start Flask app in background for testing
        python app.py &
        sleep 5  # Give the app time to start
        # Test if the app is responding
        curl http://127.0.0.1:5000/ || exit 1
        pkill -f "python app.py"  # Clean up
      env:
        FLASK_ENV: testing
        FLASK_DEBUG: 0
    
    - name: Verify setup.py
      run: |
        if [ -f setup.py ]; then
          python setup.py check
          pip install -e .
          # Only build distributions if setup.py exists
          python setup.py sdist bdist_wheel
        else
          echo "setup.py not found, skipping package verification"
        fi
    
    - name: Verify model files
      run: |
        # Check if required model files exist
        if [ ! -f "models/lr_regg.pkl" ] || [ ! -f "models/feature_names.pkl" ]; then
          echo "Error: Required model files are missing"
          exit 1
        fi
    
    - name: Check templates
      run: |
        # Verify template directory and files
        if [ ! -d "templates" ] || [ ! -f "templates/index.html" ]; then
          echo "Error: Required template files are missing"
          exit 1
        fi
