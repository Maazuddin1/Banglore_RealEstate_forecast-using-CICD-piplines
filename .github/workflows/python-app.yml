# This workflow will install Python dependencies, run tests, lint, and check app.py and setup.py functionality

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      run: |
        pytest

    - name: Check app.py functionality
      run: |
        # Test running the app file
        python app.py
      env:
        FLASK_ENV: development  # Example environment variable (customize as needed)

    - name: Verify setup.py
      run: |
        # Check if the package is installable and working
        python setup.py check
        python setup.py sdist bdist_wheel
        pip install dist/*.tar.gz
        # Test the installed package (assuming app.py has a CLI entry point in setup.py)
        myapp --help || python -m app
